# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build-php7-2:
    docker:
      # Specify the version you desire here
      #- image: circleci/php:7.2-node-browsers
      - image: circleci/php:7.2

    # working_directory: ~/laravel # directory where steps will run

    steps:
      - checkout

      #- run: sudo apt update

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            - ./vendor

      # run tests with phpunit
      - run: ./vendor/bin/phpunit

  build-php7-3:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3

    # working_directory: ~/laravel # directory where steps will run

    steps:
      - checkout

      #- run: sudo apt update

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            - ./vendor

      # run tests with phpunit
      - run: ./vendor/bin/phpunit

  build-php7-4:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.4

    # working_directory: ~/laravel # directory where steps will run

    steps:
      - checkout

      #- run: sudo apt update

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install -n

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.lock" }}
          paths:
            - ./vendor

      # run tests with phpunit
      - run: ./vendor/bin/phpunit
